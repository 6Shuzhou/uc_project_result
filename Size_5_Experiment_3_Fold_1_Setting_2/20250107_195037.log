2025-01-07 19:50:37,089 - mmseg - INFO - Multi-processing start method is `None`
2025-01-07 19:50:37,091 - mmseg - INFO - OpenCV num_threads is `16
2025-01-07 19:50:37,403 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.9.21 (main, Dec 11 2024, 16:24:11) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 4090
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 12.3, V12.3.107
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.11.0+cu115
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.5
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.5, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.12.0+cu115
OpenCV: 4.10.0
MMCV: 1.6.2
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.5
MMSegmentation: 0.30.0+
------------------------------------------------------------

2025-01-07 19:50:37,404 - mmseg - INFO - Distributed training: False
2025-01-07 19:50:39,265 - mmseg - INFO - Config:
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
cudnn_benchmark = True
custom_imports = dict(imports=['geospatial_fm'])
num_frames = 6
img_size = 366
pretrained_weights_path = '/home/featurize/work/hls-foundation-os/Current_Pretrained_Prithvi_Weights/Prithvi_EO_V1_100M.pt'
num_layers = 6
patch_size = 61
embed_dim = 768
num_heads = 8
tubelet_size = 1
max_epochs = 10
eval_epoch_interval = 1
loss_weights_multi = [
    0.17943676555320973, 1.3472306749861818, 7.788549609514691,
    0.5933110303234815, 33.44558379154902, 2.632246645198013,
    49.45546440082039, 0.8937316499127668, 1.3150492291810718,
    2.8111886947216775, 4.85870754173863
]
loss_func = dict(
    type='CrossEntropyLoss',
    use_sigmoid=False,
    class_weight=[
        0.17943676555320973, 1.3472306749861818, 7.788549609514691,
        0.5933110303234815, 33.44558379154902, 2.632246645198013,
        49.45546440082039, 0.8937316499127668, 1.3150492291810718,
        2.8111886947216775, 4.85870754173863
    ],
    avg_non_ignore=True)
output_embed_dim = 4608
experiment = 'Size_5_Experiment_3_Fold_1_Setting_2'
project_dir = '/home/featurize/Results'
work_dir = '/home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2'
save_path = '/home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2'
dataset_type = 'GeospatialDataset'
data_root = '/home/featurize/Dataset_2_5_Experiment_3Fold_1'
img_norm_cfg = dict(
    means=[
        1073.03466796875, 1140.4896240234375, 1054.77978515625,
        1020.0550537109375, 981.1219482421875, 905.3924560546875,
        994.7728271484375, 917.841552734375, 833.7246704101562,
        810.3518676757812, 729.974365234375, 874.8143920898438, 1065.396484375,
        1123.212890625, 1057.910400390625, 918.9129638671875,
        816.3870239257812, 686.6246337890625, 2178.58154296875,
        2514.484619140625, 3038.462158203125, 3420.88134765625, 3865.60546875,
        3744.219970703125, 3591.060302734375, 3228.7724609375,
        2960.333251953125, 2730.7529296875, 2531.842529296875,
        2271.312744140625, 1752.8118896484375, 2029.3685302734375,
        2056.46826171875, 1986.0235595703125, 1849.3421630859375,
        2078.154296875
    ],
    stds=[
        58.04689407348633, 178.5121612548828, 61.517452239990234,
        310.8953857421875, 345.74139404296875, 467.0456848144531,
        472.1729431152344, 191.4079132080078, 134.80113220214844,
        161.3466033935547, 275.5858459472656, 100.39026641845703,
        116.68968963623047, 190.22354125976562, 100.7003402709961,
        349.4181213378906, 396.1525573730469, 539.5966186523438,
        434.5862731933594, 197.81777954101562, 144.0300750732422,
        142.62120056152344, 220.07948303222656, 147.47279357910156,
        130.19383239746094, 184.6774139404297, 161.97935485839844,
        368.6534423828125, 387.0967102050781, 582.9990234375,
        491.1831970214844, 191.9655303955078, 121.219970703125,
        162.0044708251953, 288.8150329589844, 104.3759765625
    ])
bands = [0, 1, 2, 3, 4, 5]
tile_size = 366
crop_size = (366, 366)
train_pipeline = [
    dict(type='LoadGeospatialImageFromFile', to_float32=True),
    dict(type='LoadGeospatialAnnotations', reduce_zero_label=True),
    dict(type='RandomFlip', prob=0.5),
    dict(type='ToTensor', keys=['img', 'gt_semantic_seg']),
    dict(type='TorchPermute', keys=['img'], order=(2, 0, 1)),
    dict(
        type='TorchNormalize',
        means=[
            1073.03466796875, 1140.4896240234375, 1054.77978515625,
            1020.0550537109375, 981.1219482421875, 905.3924560546875,
            994.7728271484375, 917.841552734375, 833.7246704101562,
            810.3518676757812, 729.974365234375, 874.8143920898438,
            1065.396484375, 1123.212890625, 1057.910400390625,
            918.9129638671875, 816.3870239257812, 686.6246337890625,
            2178.58154296875, 2514.484619140625, 3038.462158203125,
            3420.88134765625, 3865.60546875, 3744.219970703125,
            3591.060302734375, 3228.7724609375, 2960.333251953125,
            2730.7529296875, 2531.842529296875, 2271.312744140625,
            1752.8118896484375, 2029.3685302734375, 2056.46826171875,
            1986.0235595703125, 1849.3421630859375, 2078.154296875
        ],
        stds=[
            58.04689407348633, 178.5121612548828, 61.517452239990234,
            310.8953857421875, 345.74139404296875, 467.0456848144531,
            472.1729431152344, 191.4079132080078, 134.80113220214844,
            161.3466033935547, 275.5858459472656, 100.39026641845703,
            116.68968963623047, 190.22354125976562, 100.7003402709961,
            349.4181213378906, 396.1525573730469, 539.5966186523438,
            434.5862731933594, 197.81777954101562, 144.0300750732422,
            142.62120056152344, 220.07948303222656, 147.47279357910156,
            130.19383239746094, 184.6774139404297, 161.97935485839844,
            368.6534423828125, 387.0967102050781, 582.9990234375,
            491.1831970214844, 191.9655303955078, 121.219970703125,
            162.0044708251953, 288.8150329589844, 104.3759765625
        ]),
    dict(type='TorchRandomCrop', crop_size=(366, 366)),
    dict(type='Reshape', keys=['img'], new_shape=(6, 6, 366, 366)),
    dict(type='Reshape', keys=['gt_semantic_seg'], new_shape=(1, 366, 366)),
    dict(
        type='CastTensor',
        keys=['gt_semantic_seg'],
        new_type='torch.LongTensor'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadGeospatialImageFromFile', to_float32=True),
    dict(type='ToTensor', keys=['img']),
    dict(type='TorchPermute', keys=['img'], order=(2, 0, 1)),
    dict(
        type='TorchNormalize',
        means=[
            1073.03466796875, 1140.4896240234375, 1054.77978515625,
            1020.0550537109375, 981.1219482421875, 905.3924560546875,
            994.7728271484375, 917.841552734375, 833.7246704101562,
            810.3518676757812, 729.974365234375, 874.8143920898438,
            1065.396484375, 1123.212890625, 1057.910400390625,
            918.9129638671875, 816.3870239257812, 686.6246337890625,
            2178.58154296875, 2514.484619140625, 3038.462158203125,
            3420.88134765625, 3865.60546875, 3744.219970703125,
            3591.060302734375, 3228.7724609375, 2960.333251953125,
            2730.7529296875, 2531.842529296875, 2271.312744140625,
            1752.8118896484375, 2029.3685302734375, 2056.46826171875,
            1986.0235595703125, 1849.3421630859375, 2078.154296875
        ],
        stds=[
            58.04689407348633, 178.5121612548828, 61.517452239990234,
            310.8953857421875, 345.74139404296875, 467.0456848144531,
            472.1729431152344, 191.4079132080078, 134.80113220214844,
            161.3466033935547, 275.5858459472656, 100.39026641845703,
            116.68968963623047, 190.22354125976562, 100.7003402709961,
            349.4181213378906, 396.1525573730469, 539.5966186523438,
            434.5862731933594, 197.81777954101562, 144.0300750732422,
            142.62120056152344, 220.07948303222656, 147.47279357910156,
            130.19383239746094, 184.6774139404297, 161.97935485839844,
            368.6534423828125, 387.0967102050781, 582.9990234375,
            491.1831970214844, 191.9655303955078, 121.219970703125,
            162.0044708251953, 288.8150329589844, 104.3759765625
        ]),
    dict(
        type='Reshape',
        keys=['img'],
        new_shape=(6, 6, -1, -1),
        look_up=dict({
            '2': 1,
            '3': 2
        })),
    dict(type='CastTensor', keys=['img'], new_type='torch.FloatTensor'),
    dict(
        type='CollectTestList',
        keys=['img'],
        meta_keys=[
            'img_info', 'seg_fields', 'img_prefix', 'seg_prefix', 'filename',
            'ori_filename', 'img', 'img_shape', 'ori_shape', 'pad_shape',
            'scale_factor', 'img_norm_cfg'
        ])
]
CLASSES = ('Wheat', 'Maize', 'Sorghum', 'Barley', 'Rye', 'Oats', 'Grapes',
           'Rapeseed', 'Sunflower', 'Potatoes', 'Peas')
dataset = 'GeospatialDataset'
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=3,
    train=dict(
        type='GeospatialDataset',
        CLASSES=('Wheat', 'Maize', 'Sorghum', 'Barley', 'Rye', 'Oats',
                 'Grapes', 'Rapeseed', 'Sunflower', 'Potatoes', 'Peas'),
        reduce_zero_label=True,
        data_root='/home/featurize/Dataset_2_5_Experiment_3Fold_1',
        img_dir='Training_Set',
        ann_dir='Training_Set',
        pipeline=[
            dict(type='LoadGeospatialImageFromFile', to_float32=True),
            dict(type='LoadGeospatialAnnotations', reduce_zero_label=True),
            dict(type='RandomFlip', prob=0.5),
            dict(type='ToTensor', keys=['img', 'gt_semantic_seg']),
            dict(type='TorchPermute', keys=['img'], order=(2, 0, 1)),
            dict(
                type='TorchNormalize',
                means=[
                    1073.03466796875, 1140.4896240234375, 1054.77978515625,
                    1020.0550537109375, 981.1219482421875, 905.3924560546875,
                    994.7728271484375, 917.841552734375, 833.7246704101562,
                    810.3518676757812, 729.974365234375, 874.8143920898438,
                    1065.396484375, 1123.212890625, 1057.910400390625,
                    918.9129638671875, 816.3870239257812, 686.6246337890625,
                    2178.58154296875, 2514.484619140625, 3038.462158203125,
                    3420.88134765625, 3865.60546875, 3744.219970703125,
                    3591.060302734375, 3228.7724609375, 2960.333251953125,
                    2730.7529296875, 2531.842529296875, 2271.312744140625,
                    1752.8118896484375, 2029.3685302734375, 2056.46826171875,
                    1986.0235595703125, 1849.3421630859375, 2078.154296875
                ],
                stds=[
                    58.04689407348633, 178.5121612548828, 61.517452239990234,
                    310.8953857421875, 345.74139404296875, 467.0456848144531,
                    472.1729431152344, 191.4079132080078, 134.80113220214844,
                    161.3466033935547, 275.5858459472656, 100.39026641845703,
                    116.68968963623047, 190.22354125976562, 100.7003402709961,
                    349.4181213378906, 396.1525573730469, 539.5966186523438,
                    434.5862731933594, 197.81777954101562, 144.0300750732422,
                    142.62120056152344, 220.07948303222656, 147.47279357910156,
                    130.19383239746094, 184.6774139404297, 161.97935485839844,
                    368.6534423828125, 387.0967102050781, 582.9990234375,
                    491.1831970214844, 191.9655303955078, 121.219970703125,
                    162.0044708251953, 288.8150329589844, 104.3759765625
                ]),
            dict(type='TorchRandomCrop', crop_size=(366, 366)),
            dict(type='Reshape', keys=['img'], new_shape=(6, 6, 366, 366)),
            dict(
                type='Reshape',
                keys=['gt_semantic_seg'],
                new_shape=(1, 366, 366)),
            dict(
                type='CastTensor',
                keys=['gt_semantic_seg'],
                new_type='torch.LongTensor'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ],
        img_suffix='_image.npy',
        seg_map_suffix='_labels.npy'),
    val=dict(
        type='GeospatialDataset',
        CLASSES=('Wheat', 'Maize', 'Sorghum', 'Barley', 'Rye', 'Oats',
                 'Grapes', 'Rapeseed', 'Sunflower', 'Potatoes', 'Peas'),
        reduce_zero_label=True,
        data_root='/home/featurize/Dataset_2_5_Experiment_3Fold_1',
        img_dir='Validation_Set',
        ann_dir='Validation_Set',
        pipeline=[
            dict(type='LoadGeospatialImageFromFile', to_float32=True),
            dict(type='ToTensor', keys=['img']),
            dict(type='TorchPermute', keys=['img'], order=(2, 0, 1)),
            dict(
                type='TorchNormalize',
                means=[
                    1073.03466796875, 1140.4896240234375, 1054.77978515625,
                    1020.0550537109375, 981.1219482421875, 905.3924560546875,
                    994.7728271484375, 917.841552734375, 833.7246704101562,
                    810.3518676757812, 729.974365234375, 874.8143920898438,
                    1065.396484375, 1123.212890625, 1057.910400390625,
                    918.9129638671875, 816.3870239257812, 686.6246337890625,
                    2178.58154296875, 2514.484619140625, 3038.462158203125,
                    3420.88134765625, 3865.60546875, 3744.219970703125,
                    3591.060302734375, 3228.7724609375, 2960.333251953125,
                    2730.7529296875, 2531.842529296875, 2271.312744140625,
                    1752.8118896484375, 2029.3685302734375, 2056.46826171875,
                    1986.0235595703125, 1849.3421630859375, 2078.154296875
                ],
                stds=[
                    58.04689407348633, 178.5121612548828, 61.517452239990234,
                    310.8953857421875, 345.74139404296875, 467.0456848144531,
                    472.1729431152344, 191.4079132080078, 134.80113220214844,
                    161.3466033935547, 275.5858459472656, 100.39026641845703,
                    116.68968963623047, 190.22354125976562, 100.7003402709961,
                    349.4181213378906, 396.1525573730469, 539.5966186523438,
                    434.5862731933594, 197.81777954101562, 144.0300750732422,
                    142.62120056152344, 220.07948303222656, 147.47279357910156,
                    130.19383239746094, 184.6774139404297, 161.97935485839844,
                    368.6534423828125, 387.0967102050781, 582.9990234375,
                    491.1831970214844, 191.9655303955078, 121.219970703125,
                    162.0044708251953, 288.8150329589844, 104.3759765625
                ]),
            dict(
                type='Reshape',
                keys=['img'],
                new_shape=(6, 6, -1, -1),
                look_up=dict({
                    '2': 1,
                    '3': 2
                })),
            dict(
                type='CastTensor', keys=['img'], new_type='torch.FloatTensor'),
            dict(
                type='CollectTestList',
                keys=['img'],
                meta_keys=[
                    'img_info', 'seg_fields', 'img_prefix', 'seg_prefix',
                    'filename', 'ori_filename', 'img', 'img_shape',
                    'ori_shape', 'pad_shape', 'scale_factor', 'img_norm_cfg'
                ])
        ],
        img_suffix='_image.npy',
        seg_map_suffix='_labels.npy'),
    test=dict(
        type='GeospatialDataset',
        CLASSES=('Wheat', 'Maize', 'Sorghum', 'Barley', 'Rye', 'Oats',
                 'Grapes', 'Rapeseed', 'Sunflower', 'Potatoes', 'Peas'),
        reduce_zero_label=True,
        data_root='/home/featurize/Dataset_2_5_Experiment_3Fold_1',
        img_dir='Test_Set',
        ann_dir='Test_Set',
        pipeline=[
            dict(type='LoadGeospatialImageFromFile', to_float32=True),
            dict(type='ToTensor', keys=['img']),
            dict(type='TorchPermute', keys=['img'], order=(2, 0, 1)),
            dict(
                type='TorchNormalize',
                means=[
                    1073.03466796875, 1140.4896240234375, 1054.77978515625,
                    1020.0550537109375, 981.1219482421875, 905.3924560546875,
                    994.7728271484375, 917.841552734375, 833.7246704101562,
                    810.3518676757812, 729.974365234375, 874.8143920898438,
                    1065.396484375, 1123.212890625, 1057.910400390625,
                    918.9129638671875, 816.3870239257812, 686.6246337890625,
                    2178.58154296875, 2514.484619140625, 3038.462158203125,
                    3420.88134765625, 3865.60546875, 3744.219970703125,
                    3591.060302734375, 3228.7724609375, 2960.333251953125,
                    2730.7529296875, 2531.842529296875, 2271.312744140625,
                    1752.8118896484375, 2029.3685302734375, 2056.46826171875,
                    1986.0235595703125, 1849.3421630859375, 2078.154296875
                ],
                stds=[
                    58.04689407348633, 178.5121612548828, 61.517452239990234,
                    310.8953857421875, 345.74139404296875, 467.0456848144531,
                    472.1729431152344, 191.4079132080078, 134.80113220214844,
                    161.3466033935547, 275.5858459472656, 100.39026641845703,
                    116.68968963623047, 190.22354125976562, 100.7003402709961,
                    349.4181213378906, 396.1525573730469, 539.5966186523438,
                    434.5862731933594, 197.81777954101562, 144.0300750732422,
                    142.62120056152344, 220.07948303222656, 147.47279357910156,
                    130.19383239746094, 184.6774139404297, 161.97935485839844,
                    368.6534423828125, 387.0967102050781, 582.9990234375,
                    491.1831970214844, 191.9655303955078, 121.219970703125,
                    162.0044708251953, 288.8150329589844, 104.3759765625
                ]),
            dict(
                type='Reshape',
                keys=['img'],
                new_shape=(6, 6, -1, -1),
                look_up=dict({
                    '2': 1,
                    '3': 2
                })),
            dict(
                type='CastTensor', keys=['img'], new_type='torch.FloatTensor'),
            dict(
                type='CollectTestList',
                keys=['img'],
                meta_keys=[
                    'img_info', 'seg_fields', 'img_prefix', 'seg_prefix',
                    'filename', 'ori_filename', 'img', 'img_shape',
                    'ori_shape', 'pad_shape', 'scale_factor', 'img_norm_cfg'
                ])
        ],
        img_suffix='_image.npy',
        seg_map_suffix='_labels.npy'))
optimizer = dict(
    type='Adam', lr=1.5e-05, betas=(0.9, 0.999), weight_decay=0.05)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='poly',
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06,
    power=1.0,
    min_lr=0.0,
    by_epoch=False)
log_config = dict(
    interval=10,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
checkpoint_config = dict(
    by_epoch=True,
    interval=100,
    out_dir='/home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2')
evaluation = dict(
    interval=1,
    metric=['mIoU', 'mDice', 'mFscore'],
    pre_eval=True,
    save_best='mIoU',
    by_epoch=True)
reduce_train_set = dict(reduce_train_set=False)
reduce_factor = dict(reduce_factor=1)
runner = dict(type='EpochBasedRunner', max_epochs=10)
workflow = [('train', 1)]
norm_cfg = dict(type='BN', requires_grad=True)
model = dict(
    type='TemporalEncoderDecoder',
    frozen_backbone=False,
    backbone=dict(
        type='TemporalViTEncoder',
        pretrained=
        '/home/featurize/work/hls-foundation-os/Current_Pretrained_Prithvi_Weights/Prithvi_EO_V1_100M.pt',
        img_size=366,
        patch_size=61,
        num_frames=6,
        tubelet_size=1,
        in_chans=6,
        embed_dim=768,
        depth=6,
        num_heads=8,
        mlp_ratio=4.0,
        norm_pix_loss=False),
    neck=dict(
        type='ConvTransformerTokensToEmbeddingNeck',
        embed_dim=4608,
        output_embed_dim=4608,
        drop_cls_token=True,
        Hp=6,
        Wp=6),
    decode_head=dict(
        num_classes=11,
        in_channels=4608,
        type='FCNHead',
        in_index=-1,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss',
            use_sigmoid=False,
            class_weight=[
                0.17943676555320973, 1.3472306749861818, 7.788549609514691,
                0.5933110303234815, 33.44558379154902, 2.632246645198013,
                49.45546440082039, 0.8937316499127668, 1.3150492291810718,
                2.8111886947216775, 4.85870754173863
            ],
            avg_non_ignore=True)),
    auxiliary_head=dict(
        num_classes=11,
        in_channels=4608,
        type='FCNHead',
        in_index=-1,
        channels=256,
        num_convs=2,
        concat_input=False,
        dropout_ratio=0.1,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss',
            use_sigmoid=False,
            class_weight=[
                0.17943676555320973, 1.3472306749861818, 7.788549609514691,
                0.5933110303234815, 33.44558379154902, 2.632246645198013,
                49.45546440082039, 0.8937316499127668, 1.3150492291810718,
                2.8111886947216775, 4.85870754173863
            ],
            avg_non_ignore=True)),
    train_cfg=dict(),
    test_cfg=dict(mode='slide', stride=(183, 183), crop_size=(366, 366)))
auto_resume = False
gpu_ids = range(0, 1)

2025-01-07 19:50:39,266 - mmseg - INFO - Set random seed to 1818619113, deterministic: False
2025-01-07 19:50:43,987 - mmseg - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2025-01-07 19:50:43,989 - mmseg - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.cls_token - torch.Size([1, 1, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.pos_embed - torch.Size([1, 217, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.patch_embed.proj.weight - torch.Size([768, 6, 1, 61, 61]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.patch_embed.proj.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.norm1.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.norm1.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.attn.qkv.weight - torch.Size([2304, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.attn.qkv.bias - torch.Size([2304]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.attn.proj.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.attn.proj.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.norm2.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.norm2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.mlp.fc1.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.mlp.fc1.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.mlp.fc2.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.0.mlp.fc2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.norm1.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.norm1.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.attn.qkv.weight - torch.Size([2304, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.attn.qkv.bias - torch.Size([2304]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.attn.proj.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.attn.proj.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.norm2.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.norm2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.mlp.fc1.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.mlp.fc1.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.mlp.fc2.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.1.mlp.fc2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.norm1.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.norm1.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.attn.qkv.weight - torch.Size([2304, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.attn.qkv.bias - torch.Size([2304]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.attn.proj.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.attn.proj.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.norm2.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.norm2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.mlp.fc1.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.mlp.fc1.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.mlp.fc2.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.2.mlp.fc2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.norm1.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.norm1.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.attn.qkv.weight - torch.Size([2304, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.attn.qkv.bias - torch.Size([2304]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.attn.proj.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.attn.proj.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.norm2.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.norm2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.mlp.fc1.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.mlp.fc1.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.mlp.fc2.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.3.mlp.fc2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.norm1.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.norm1.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.attn.qkv.weight - torch.Size([2304, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.attn.qkv.bias - torch.Size([2304]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.attn.proj.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.attn.proj.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.norm2.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.norm2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.mlp.fc1.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.mlp.fc1.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.mlp.fc2.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.4.mlp.fc2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.norm1.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.norm1.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.attn.qkv.weight - torch.Size([2304, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.attn.qkv.bias - torch.Size([2304]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.attn.proj.weight - torch.Size([768, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.attn.proj.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.norm2.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.norm2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.mlp.fc1.weight - torch.Size([3072, 768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.mlp.fc1.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.mlp.fc2.weight - torch.Size([768, 3072]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.blocks.5.mlp.fc2.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.norm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

backbone.norm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn1.0.weight - torch.Size([4608, 4608, 2, 2]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn1.0.bias - torch.Size([4608]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn1.1.ln.weight - torch.Size([4608]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn1.1.ln.bias - torch.Size([4608]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn1.3.weight - torch.Size([4608, 4608, 2, 2]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn1.3.bias - torch.Size([4608]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn2.0.weight - torch.Size([4608, 4608, 2, 2]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn2.0.bias - torch.Size([4608]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn2.1.ln.weight - torch.Size([4608]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn2.1.ln.bias - torch.Size([4608]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn2.3.weight - torch.Size([4608, 4608, 2, 2]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

neck.fpn2.3.bias - torch.Size([4608]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

decode_head.conv_seg.weight - torch.Size([11, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([11]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.convs.0.conv.weight - torch.Size([256, 4608, 3, 3]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

decode_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

decode_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

auxiliary_head.conv_seg.weight - torch.Size([11, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.conv_seg.bias - torch.Size([11]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.convs.0.conv.weight - torch.Size([256, 4608, 3, 3]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

auxiliary_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

auxiliary_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

auxiliary_head.convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

auxiliary_head.convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  

auxiliary_head.convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TemporalEncoderDecoder  
2025-01-07 19:50:43,992 - mmseg - INFO - TemporalEncoderDecoder(
  (backbone): TemporalViTEncoder(
    (patch_embed): PatchEmbed(
      (proj): Conv3d(6, 768, kernel_size=(1, 61, 61), stride=(1, 61, 61))
      (norm): Identity()
    )
    (blocks): ModuleList(
      (0): Block(
        (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=768, out_features=2304, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=768, out_features=768, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=768, out_features=3072, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=3072, out_features=768, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=768, out_features=2304, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=768, out_features=768, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=768, out_features=3072, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=3072, out_features=768, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=768, out_features=2304, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=768, out_features=768, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=768, out_features=3072, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=3072, out_features=768, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=768, out_features=2304, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=768, out_features=768, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=768, out_features=3072, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=3072, out_features=768, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=768, out_features=2304, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=768, out_features=768, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=768, out_features=3072, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=3072, out_features=768, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=768, out_features=2304, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=768, out_features=768, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (drop_path): Identity()
        (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (mlp): Mlp(
          (fc1): Linear(in_features=768, out_features=3072, bias=True)
          (act): GELU()
          (fc2): Linear(in_features=3072, out_features=768, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
  )
  (neck): ConvTransformerTokensToEmbeddingNeck(
    (fpn1): Sequential(
      (0): ConvTranspose2d(4608, 4608, kernel_size=(2, 2), stride=(2, 2))
      (1): Norm2d(
        (ln): LayerNorm((4608,), eps=1e-06, elementwise_affine=True)
      )
      (2): GELU()
      (3): ConvTranspose2d(4608, 4608, kernel_size=(2, 2), stride=(2, 2))
    )
    (fpn2): Sequential(
      (0): ConvTranspose2d(4608, 4608, kernel_size=(2, 2), stride=(2, 2))
      (1): Norm2d(
        (ln): LayerNorm((4608,), eps=1e-06, elementwise_affine=True)
      )
      (2): GELU()
      (3): ConvTranspose2d(4608, 4608, kernel_size=(2, 2), stride=(2, 2))
    )
  )
  (decode_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss(avg_non_ignore=True)
    (conv_seg): Conv2d(256, 11, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(4608, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  (auxiliary_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss(avg_non_ignore=True)
    (conv_seg): Conv2d(256, 11, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(4608, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (1): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
)
2025-01-07 19:50:43,999 - mmseg - INFO - Loaded 198 images
2025-01-07 19:50:48,947 - mmseg - INFO - Loaded 68 images
2025-01-07 19:50:48,947 - mmseg - INFO - Start running, host: featurize@featurize, work_dir: /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2
2025-01-07 19:50:48,947 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-01-07 19:50:48,948 - mmseg - INFO - workflow: [('train', 1)], max: 10 epochs
2025-01-07 19:50:48,948 - mmseg - INFO - Checkpoints will be saved to /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2 by HardDiskBackend.
2025-01-07 19:51:01,632 - mmseg - INFO - Epoch [1][10/49]	lr: 8.836e-08, eta: 0:09:27, time: 1.182, data_time: 0.248, memory: 15650, decode.loss_ce: 2.7958, decode.acc_seg: 2.8354, aux.loss_ce: 2.7738, aux.acc_seg: 14.8953, loss: 5.5696
2025-01-07 19:51:05,930 - mmseg - INFO - Epoch [1][20/49]	lr: 1.826e-07, eta: 0:06:18, time: 0.430, data_time: 0.005, memory: 15650, decode.loss_ce: 2.4776, decode.acc_seg: 3.8773, aux.loss_ce: 2.4875, aux.acc_seg: 14.7276, loss: 4.9651
2025-01-07 19:51:10,274 - mmseg - INFO - Epoch [1][30/49]	lr: 2.729e-07, eta: 0:05:13, time: 0.434, data_time: 0.005, memory: 15650, decode.loss_ce: 2.5158, decode.acc_seg: 3.6592, aux.loss_ce: 2.5200, aux.acc_seg: 16.2329, loss: 5.0358
2025-01-07 19:51:14,642 - mmseg - INFO - Epoch [1][40/49]	lr: 3.590e-07, eta: 0:04:39, time: 0.437, data_time: 0.005, memory: 15650, decode.loss_ce: 2.4710, decode.acc_seg: 3.8516, aux.loss_ce: 2.4694, aux.acc_seg: 15.9710, loss: 4.9404
2025-01-07 19:51:36,647 - mmseg - INFO - per class results:
2025-01-07 19:51:36,718 - mmseg - INFO - 
+-----------+------+-------+-------+--------+-----------+--------+
|   Class   | IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+-----------+------+-------+-------+--------+-----------+--------+
|   Wheat   | 0.97 |  0.98 |  1.93 |  1.93  |   48.19   |  0.98  |
|   Maize   | 5.45 | 14.78 | 10.34 | 10.34  |    7.96   | 14.78  |
|  Sorghum  | 0.45 |  6.81 |  0.89 |  0.89  |    0.48   |  6.81  |
|   Barley  | 0.14 |  0.14 |  0.28 |  0.28  |   16.68   |  0.14  |
|    Rye    | 0.14 | 18.39 |  0.27 |  0.27  |    0.14   | 18.39  |
|    Oats   | 1.2  |  1.64 |  2.37 |  2.37  |    4.26   |  1.64  |
|   Grapes  | 0.16 | 10.96 |  0.33 |  0.33  |    0.17   | 10.96  |
|  Rapeseed | 4.04 |  5.54 |  7.77 |  7.77  |   13.04   |  5.54  |
| Sunflower | 1.14 |  1.39 |  2.26 |  2.26  |    6.0    |  1.39  |
|  Potatoes | 3.13 | 24.68 |  6.07 |  6.07  |    3.46   | 24.68  |
|    Peas   | 2.04 |  16.1 |  3.99 |  3.99  |    2.28   |  16.1  |
+-----------+------+-------+-------+--------+-----------+--------+
2025-01-07 19:51:36,718 - mmseg - INFO - Summary:
2025-01-07 19:51:36,718 - mmseg - INFO - 
+------+------+------+-------+---------+------------+---------+
| aAcc | mIoU | mAcc | mDice | mFscore | mPrecision | mRecall |
+------+------+------+-------+---------+------------+---------+
| 3.75 | 1.71 | 9.22 |  3.32 |   3.32  |    9.33    |   9.22  |
+------+------+------+-------+---------+------------+---------+
2025-01-07 19:51:50,025 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_epoch_1.pth.
2025-01-07 19:51:50,026 - mmseg - INFO - Best mIoU is 0.0171 at 1 epoch.
2025-01-07 19:51:50,027 - mmseg - INFO - Exp name: size_5_experiment_3_fold_1_setting_2.py
2025-01-07 19:51:50,027 - mmseg - INFO - Epoch(val) [1][68]	aAcc: 0.0375, mIoU: 0.0171, mAcc: 0.0922, mDice: 0.0332, mFscore: 0.0332, mPrecision: 0.0933, mRecall: 0.0922, IoU.Wheat: 0.0097, IoU.Maize: 0.0545, IoU.Sorghum: 0.0045, IoU.Barley: 0.0014, IoU.Rye: 0.0014, IoU.Oats: 0.0120, IoU.Grapes: 0.0016, IoU.Rapeseed: 0.0404, IoU.Sunflower: 0.0114, IoU.Potatoes: 0.0313, IoU.Peas: 0.0204, Acc.Wheat: 0.0098, Acc.Maize: 0.1478, Acc.Sorghum: 0.0681, Acc.Barley: 0.0014, Acc.Rye: 0.1839, Acc.Oats: 0.0164, Acc.Grapes: 0.1096, Acc.Rapeseed: 0.0554, Acc.Sunflower: 0.0139, Acc.Potatoes: 0.2468, Acc.Peas: 0.1610, Dice.Wheat: 0.0193, Dice.Maize: 0.1034, Dice.Sorghum: 0.0089, Dice.Barley: 0.0028, Dice.Rye: 0.0027, Dice.Oats: 0.0237, Dice.Grapes: 0.0033, Dice.Rapeseed: 0.0777, Dice.Sunflower: 0.0226, Dice.Potatoes: 0.0607, Dice.Peas: 0.0399, Fscore.Wheat: 0.0193, Fscore.Maize: 0.1034, Fscore.Sorghum: 0.0089, Fscore.Barley: 0.0028, Fscore.Rye: 0.0027, Fscore.Oats: 0.0237, Fscore.Grapes: 0.0033, Fscore.Rapeseed: 0.0777, Fscore.Sunflower: 0.0226, Fscore.Potatoes: 0.0607, Fscore.Peas: 0.0399, Precision.Wheat: 0.4819, Precision.Maize: 0.0796, Precision.Sorghum: 0.0048, Precision.Barley: 0.1668, Precision.Rye: 0.0014, Precision.Oats: 0.0426, Precision.Grapes: 0.0017, Precision.Rapeseed: 0.1304, Precision.Sunflower: 0.0600, Precision.Potatoes: 0.0346, Precision.Peas: 0.0228, Recall.Wheat: 0.0098, Recall.Maize: 0.1478, Recall.Sorghum: 0.0681, Recall.Barley: 0.0014, Recall.Rye: 0.1839, Recall.Oats: 0.0164, Recall.Grapes: 0.1096, Recall.Rapeseed: 0.0554, Recall.Sunflower: 0.0139, Recall.Potatoes: 0.2468, Recall.Peas: 0.1610
2025-01-07 19:51:56,792 - mmseg - INFO - Epoch [2][10/49]	lr: 5.114e-07, eta: 0:03:50, time: 0.667, data_time: 0.227, memory: 15650, decode.loss_ce: 2.7285, decode.acc_seg: 4.4955, aux.loss_ce: 2.7322, aux.acc_seg: 13.8681, loss: 5.4608
2025-01-07 19:52:01,172 - mmseg - INFO - Epoch [2][20/49]	lr: 5.856e-07, eta: 0:03:38, time: 0.438, data_time: 0.005, memory: 15650, decode.loss_ce: 2.6007, decode.acc_seg: 4.0709, aux.loss_ce: 2.5919, aux.acc_seg: 13.5361, loss: 5.1926
2025-01-07 19:52:05,712 - mmseg - INFO - Epoch [2][30/49]	lr: 6.558e-07, eta: 0:03:30, time: 0.454, data_time: 0.005, memory: 15650, decode.loss_ce: 2.2958, decode.acc_seg: 4.6175, aux.loss_ce: 2.2917, aux.acc_seg: 13.8787, loss: 4.5874
2025-01-07 19:52:10,210 - mmseg - INFO - Epoch [2][40/49]	lr: 7.220e-07, eta: 0:03:22, time: 0.450, data_time: 0.005, memory: 15650, decode.loss_ce: 3.0504, decode.acc_seg: 3.7400, aux.loss_ce: 3.0461, aux.acc_seg: 15.5371, loss: 6.0966
2025-01-07 19:52:28,663 - mmseg - INFO - per class results:
2025-01-07 19:52:28,664 - mmseg - INFO - 
+-----------+------+-------+-------+--------+-----------+--------+
|   Class   | IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+-----------+------+-------+-------+--------+-----------+--------+
|   Wheat   | 0.97 |  0.98 |  1.92 |  1.92  |   48.76   |  0.98  |
|   Maize   | 5.63 | 15.04 | 10.66 | 10.66  |    8.26   | 15.04  |
|  Sorghum  | 0.46 |  6.78 |  0.91 |  0.91  |    0.49   |  6.78  |
|   Barley  | 0.15 |  0.15 |  0.29 |  0.29  |   16.77   |  0.15  |
|    Rye    | 0.13 | 18.53 |  0.27 |  0.27  |    0.13   | 18.53  |
|    Oats   | 1.28 |  1.78 |  2.53 |  2.53  |    4.38   |  1.78  |
|   Grapes  | 0.18 | 12.52 |  0.36 |  0.36  |    0.18   | 12.52  |
|  Rapeseed | 4.31 |  5.91 |  8.26 |  8.26  |   13.71   |  5.91  |
| Sunflower | 1.2  |  1.45 |  2.37 |  2.37  |    6.49   |  1.45  |
|  Potatoes | 3.25 | 24.64 |  6.3  |  6.3   |    3.61   | 24.64  |
|    Peas   | 2.08 |  16.8 |  4.07 |  4.07  |    2.32   |  16.8  |
+-----------+------+-------+-------+--------+-----------+--------+
2025-01-07 19:52:28,664 - mmseg - INFO - Summary:
2025-01-07 19:52:28,665 - mmseg - INFO - 
+------+------+------+-------+---------+------------+---------+
| aAcc | mIoU | mAcc | mDice | mFscore | mPrecision | mRecall |
+------+------+------+-------+---------+------------+---------+
| 3.84 | 1.78 | 9.51 |  3.45 |   3.45  |    9.55    |   9.51  |
+------+------+------+-------+---------+------------+---------+
2025-01-07 19:52:29,432 - mmseg - INFO - The previous best checkpoint /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2/best_mIoU_epoch_1.pth was removed
2025-01-07 19:52:44,326 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_epoch_2.pth.
2025-01-07 19:52:44,326 - mmseg - INFO - Best mIoU is 0.0178 at 2 epoch.
2025-01-07 19:52:44,326 - mmseg - INFO - Exp name: size_5_experiment_3_fold_1_setting_2.py
2025-01-07 19:52:44,326 - mmseg - INFO - Epoch(val) [2][68]	aAcc: 0.0384, mIoU: 0.0178, mAcc: 0.0951, mDice: 0.0345, mFscore: 0.0345, mPrecision: 0.0955, mRecall: 0.0951, IoU.Wheat: 0.0097, IoU.Maize: 0.0563, IoU.Sorghum: 0.0046, IoU.Barley: 0.0015, IoU.Rye: 0.0013, IoU.Oats: 0.0128, IoU.Grapes: 0.0018, IoU.Rapeseed: 0.0431, IoU.Sunflower: 0.0120, IoU.Potatoes: 0.0325, IoU.Peas: 0.0208, Acc.Wheat: 0.0098, Acc.Maize: 0.1504, Acc.Sorghum: 0.0678, Acc.Barley: 0.0015, Acc.Rye: 0.1853, Acc.Oats: 0.0178, Acc.Grapes: 0.1252, Acc.Rapeseed: 0.0591, Acc.Sunflower: 0.0145, Acc.Potatoes: 0.2464, Acc.Peas: 0.1680, Dice.Wheat: 0.0192, Dice.Maize: 0.1066, Dice.Sorghum: 0.0091, Dice.Barley: 0.0029, Dice.Rye: 0.0027, Dice.Oats: 0.0253, Dice.Grapes: 0.0036, Dice.Rapeseed: 0.0826, Dice.Sunflower: 0.0237, Dice.Potatoes: 0.0630, Dice.Peas: 0.0407, Fscore.Wheat: 0.0192, Fscore.Maize: 0.1066, Fscore.Sorghum: 0.0091, Fscore.Barley: 0.0029, Fscore.Rye: 0.0027, Fscore.Oats: 0.0253, Fscore.Grapes: 0.0036, Fscore.Rapeseed: 0.0826, Fscore.Sunflower: 0.0237, Fscore.Potatoes: 0.0630, Fscore.Peas: 0.0407, Precision.Wheat: 0.4876, Precision.Maize: 0.0826, Precision.Sorghum: 0.0049, Precision.Barley: 0.1677, Precision.Rye: 0.0013, Precision.Oats: 0.0438, Precision.Grapes: 0.0018, Precision.Rapeseed: 0.1371, Precision.Sunflower: 0.0649, Precision.Potatoes: 0.0361, Precision.Peas: 0.0232, Recall.Wheat: 0.0098, Recall.Maize: 0.1504, Recall.Sorghum: 0.0678, Recall.Barley: 0.0015, Recall.Rye: 0.1853, Recall.Oats: 0.0178, Recall.Grapes: 0.1252, Recall.Rapeseed: 0.0591, Recall.Sunflower: 0.0145, Recall.Potatoes: 0.2464, Recall.Peas: 0.1680
2025-01-07 19:52:51,136 - mmseg - INFO - Epoch [3][10/49]	lr: 8.364e-07, eta: 0:03:02, time: 0.676, data_time: 0.244, memory: 15650, decode.loss_ce: 2.3232, decode.acc_seg: 3.8998, aux.loss_ce: 2.3209, aux.acc_seg: 15.6276, loss: 4.6442
2025-01-07 19:52:55,494 - mmseg - INFO - Epoch [3][20/49]	lr: 8.906e-07, eta: 0:02:56, time: 0.436, data_time: 0.005, memory: 15650, decode.loss_ce: 2.3397, decode.acc_seg: 4.2041, aux.loss_ce: 2.3524, aux.acc_seg: 15.4197, loss: 4.6921
2025-01-07 19:52:59,876 - mmseg - INFO - Epoch [3][30/49]	lr: 9.408e-07, eta: 0:02:50, time: 0.438, data_time: 0.005, memory: 15650, decode.loss_ce: 2.2903, decode.acc_seg: 3.8963, aux.loss_ce: 2.2885, aux.acc_seg: 15.3572, loss: 4.5788
2025-01-07 19:53:04,232 - mmseg - INFO - Epoch [3][40/49]	lr: 9.870e-07, eta: 0:02:45, time: 0.436, data_time: 0.005, memory: 15650, decode.loss_ce: 2.4380, decode.acc_seg: 4.4011, aux.loss_ce: 2.4292, aux.acc_seg: 15.6572, loss: 4.8672
2025-01-07 19:53:14,853 - mmseg - INFO - per class results:
2025-01-07 19:53:14,854 - mmseg - INFO - 
+-----------+------+-------+-------+--------+-----------+--------+
|   Class   | IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+-----------+------+-------+-------+--------+-----------+--------+
|   Wheat   | 1.11 |  1.12 |  2.19 |  2.19  |   49.79   |  1.12  |
|   Maize   | 5.94 | 15.79 | 11.22 | 11.22  |    8.7    | 15.79  |
|  Sorghum  | 0.48 |  7.23 |  0.95 |  0.95  |    0.51   |  7.23  |
|   Barley  | 0.18 |  0.18 |  0.35 |  0.35  |   17.23   |  0.18  |
|    Rye    | 0.13 | 18.32 |  0.26 |  0.26  |    0.13   | 18.32  |
|    Oats   | 1.41 |  1.98 |  2.78 |  2.78  |    4.67   |  1.98  |
|   Grapes  | 0.2  | 12.17 |  0.39 |  0.39  |    0.2    | 12.17  |
|  Rapeseed | 5.12 |  7.28 |  9.75 |  9.75  |   14.76   |  7.28  |
| Sunflower | 1.33 |  1.6  |  2.62 |  2.62  |    7.31   |  1.6   |
|  Potatoes | 3.48 | 26.75 |  6.73 |  6.73  |    3.85   | 26.75  |
|    Peas   | 2.15 | 17.28 |  4.21 |  4.21  |    2.4    | 17.28  |
+-----------+------+-------+-------+--------+-----------+--------+
2025-01-07 19:53:14,854 - mmseg - INFO - Summary:
2025-01-07 19:53:14,855 - mmseg - INFO - 
+------+------+------+-------+---------+------------+---------+
| aAcc | mIoU | mAcc | mDice | mFscore | mPrecision | mRecall |
+------+------+------+-------+---------+------------+---------+
| 4.24 | 1.96 | 9.97 |  3.77 |   3.77  |    9.96    |   9.97  |
+------+------+------+-------+---------+------------+---------+
2025-01-07 19:53:15,990 - mmseg - INFO - The previous best checkpoint /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2/best_mIoU_epoch_2.pth was removed
2025-01-07 19:53:37,575 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_epoch_3.pth.
2025-01-07 19:53:37,576 - mmseg - INFO - Best mIoU is 0.0196 at 3 epoch.
2025-01-07 19:53:37,576 - mmseg - INFO - Exp name: size_5_experiment_3_fold_1_setting_2.py
2025-01-07 19:53:37,576 - mmseg - INFO - Epoch(val) [3][68]	aAcc: 0.0424, mIoU: 0.0196, mAcc: 0.0997, mDice: 0.0377, mFscore: 0.0377, mPrecision: 0.0996, mRecall: 0.0997, IoU.Wheat: 0.0111, IoU.Maize: 0.0594, IoU.Sorghum: 0.0048, IoU.Barley: 0.0018, IoU.Rye: 0.0013, IoU.Oats: 0.0141, IoU.Grapes: 0.0020, IoU.Rapeseed: 0.0512, IoU.Sunflower: 0.0133, IoU.Potatoes: 0.0348, IoU.Peas: 0.0215, Acc.Wheat: 0.0112, Acc.Maize: 0.1579, Acc.Sorghum: 0.0723, Acc.Barley: 0.0018, Acc.Rye: 0.1832, Acc.Oats: 0.0198, Acc.Grapes: 0.1217, Acc.Rapeseed: 0.0728, Acc.Sunflower: 0.0160, Acc.Potatoes: 0.2675, Acc.Peas: 0.1728, Dice.Wheat: 0.0219, Dice.Maize: 0.1122, Dice.Sorghum: 0.0095, Dice.Barley: 0.0035, Dice.Rye: 0.0026, Dice.Oats: 0.0278, Dice.Grapes: 0.0039, Dice.Rapeseed: 0.0975, Dice.Sunflower: 0.0262, Dice.Potatoes: 0.0673, Dice.Peas: 0.0421, Fscore.Wheat: 0.0219, Fscore.Maize: 0.1122, Fscore.Sorghum: 0.0095, Fscore.Barley: 0.0035, Fscore.Rye: 0.0026, Fscore.Oats: 0.0278, Fscore.Grapes: 0.0039, Fscore.Rapeseed: 0.0975, Fscore.Sunflower: 0.0262, Fscore.Potatoes: 0.0673, Fscore.Peas: 0.0421, Precision.Wheat: 0.4979, Precision.Maize: 0.0870, Precision.Sorghum: 0.0051, Precision.Barley: 0.1723, Precision.Rye: 0.0013, Precision.Oats: 0.0467, Precision.Grapes: 0.0020, Precision.Rapeseed: 0.1476, Precision.Sunflower: 0.0731, Precision.Potatoes: 0.0385, Precision.Peas: 0.0240, Recall.Wheat: 0.0112, Recall.Maize: 0.1579, Recall.Sorghum: 0.0723, Recall.Barley: 0.0018, Recall.Rye: 0.1832, Recall.Oats: 0.0198, Recall.Grapes: 0.1217, Recall.Rapeseed: 0.0728, Recall.Sunflower: 0.0160, Recall.Potatoes: 0.2675, Recall.Peas: 0.1728
2025-01-07 19:53:44,279 - mmseg - INFO - Epoch [4][10/49]	lr: 1.063e-06, eta: 0:02:31, time: 0.661, data_time: 0.225, memory: 15650, decode.loss_ce: 2.5574, decode.acc_seg: 4.2463, aux.loss_ce: 2.5546, aux.acc_seg: 16.6203, loss: 5.1120
2025-01-07 19:53:48,679 - mmseg - INFO - Epoch [4][20/49]	lr: 1.098e-06, eta: 0:02:26, time: 0.440, data_time: 0.005, memory: 15650, decode.loss_ce: 2.3776, decode.acc_seg: 5.1061, aux.loss_ce: 2.3711, aux.acc_seg: 13.0513, loss: 4.7487
2025-01-07 19:53:53,080 - mmseg - INFO - Epoch [4][30/49]	lr: 1.128e-06, eta: 0:02:21, time: 0.440, data_time: 0.005, memory: 15650, decode.loss_ce: 2.5146, decode.acc_seg: 4.5816, aux.loss_ce: 2.5062, aux.acc_seg: 15.3875, loss: 5.0209
2025-01-07 19:53:57,476 - mmseg - INFO - Epoch [4][40/49]	lr: 1.154e-06, eta: 0:02:17, time: 0.440, data_time: 0.005, memory: 15650, decode.loss_ce: 2.2404, decode.acc_seg: 4.0906, aux.loss_ce: 2.2384, aux.acc_seg: 15.2483, loss: 4.4788
2025-01-07 19:54:05,425 - mmseg - INFO - per class results:
2025-01-07 19:54:05,426 - mmseg - INFO - 
+-----------+------+-------+-------+--------+-----------+--------+
|   Class   | IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+-----------+------+-------+-------+--------+-----------+--------+
|   Wheat   | 1.23 |  1.24 |  2.43 |  2.43  |   51.03   |  1.24  |
|   Maize   | 6.4  | 16.82 | 12.03 | 12.03  |    9.37   | 16.82  |
|  Sorghum  | 0.49 |  7.64 |  0.98 |  0.98  |    0.52   |  7.64  |
|   Barley  | 0.23 |  0.23 |  0.45 |  0.45  |   18.54   |  0.23  |
|    Rye    | 0.13 | 19.26 |  0.26 |  0.26  |    0.13   | 19.26  |
|    Oats   | 1.65 |  2.38 |  3.25 |  3.25  |    5.14   |  2.38  |
|   Grapes  | 0.22 | 13.39 |  0.44 |  0.44  |    0.22   | 13.39  |
|  Rapeseed | 5.94 |  8.7  | 11.22 | 11.22  |    15.8   |  8.7   |
| Sunflower | 1.44 |  1.7  |  2.83 |  2.83  |    8.42   |  1.7   |
|  Potatoes | 3.76 |  27.4 |  7.25 |  7.25  |    4.18   |  27.4  |
|    Peas   | 2.21 | 17.09 |  4.32 |  4.32  |    2.47   | 17.09  |
+-----------+------+-------+-------+--------+-----------+--------+
2025-01-07 19:54:05,426 - mmseg - INFO - Summary:
2025-01-07 19:54:05,427 - mmseg - INFO - 
+------+------+-------+-------+---------+------------+---------+
| aAcc | mIoU |  mAcc | mDice | mFscore | mPrecision | mRecall |
+------+------+-------+-------+---------+------------+---------+
| 4.6  | 2.15 | 10.53 |  4.13 |   4.13  |   10.53    |  10.53  |
+------+------+-------+-------+---------+------------+---------+
2025-01-07 19:54:06,103 - mmseg - INFO - The previous best checkpoint /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2/best_mIoU_epoch_3.pth was removed
2025-01-07 19:54:19,143 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_epoch_4.pth.
2025-01-07 19:54:19,144 - mmseg - INFO - Best mIoU is 0.0215 at 4 epoch.
2025-01-07 19:54:19,145 - mmseg - INFO - Exp name: size_5_experiment_3_fold_1_setting_2.py
2025-01-07 19:54:19,145 - mmseg - INFO - Epoch(val) [4][68]	aAcc: 0.0460, mIoU: 0.0215, mAcc: 0.1053, mDice: 0.0413, mFscore: 0.0413, mPrecision: 0.1053, mRecall: 0.1053, IoU.Wheat: 0.0123, IoU.Maize: 0.0640, IoU.Sorghum: 0.0049, IoU.Barley: 0.0023, IoU.Rye: 0.0013, IoU.Oats: 0.0165, IoU.Grapes: 0.0022, IoU.Rapeseed: 0.0594, IoU.Sunflower: 0.0144, IoU.Potatoes: 0.0376, IoU.Peas: 0.0221, Acc.Wheat: 0.0124, Acc.Maize: 0.1682, Acc.Sorghum: 0.0764, Acc.Barley: 0.0023, Acc.Rye: 0.1926, Acc.Oats: 0.0238, Acc.Grapes: 0.1339, Acc.Rapeseed: 0.0870, Acc.Sunflower: 0.0170, Acc.Potatoes: 0.2740, Acc.Peas: 0.1709, Dice.Wheat: 0.0243, Dice.Maize: 0.1203, Dice.Sorghum: 0.0098, Dice.Barley: 0.0045, Dice.Rye: 0.0026, Dice.Oats: 0.0325, Dice.Grapes: 0.0044, Dice.Rapeseed: 0.1122, Dice.Sunflower: 0.0283, Dice.Potatoes: 0.0725, Dice.Peas: 0.0432, Fscore.Wheat: 0.0243, Fscore.Maize: 0.1203, Fscore.Sorghum: 0.0098, Fscore.Barley: 0.0045, Fscore.Rye: 0.0026, Fscore.Oats: 0.0325, Fscore.Grapes: 0.0044, Fscore.Rapeseed: 0.1122, Fscore.Sunflower: 0.0283, Fscore.Potatoes: 0.0725, Fscore.Peas: 0.0432, Precision.Wheat: 0.5103, Precision.Maize: 0.0937, Precision.Sorghum: 0.0052, Precision.Barley: 0.1854, Precision.Rye: 0.0013, Precision.Oats: 0.0514, Precision.Grapes: 0.0022, Precision.Rapeseed: 0.1580, Precision.Sunflower: 0.0842, Precision.Potatoes: 0.0418, Precision.Peas: 0.0247, Recall.Wheat: 0.0124, Recall.Maize: 0.1682, Recall.Sorghum: 0.0764, Recall.Barley: 0.0023, Recall.Rye: 0.1926, Recall.Oats: 0.0238, Recall.Grapes: 0.1339, Recall.Rapeseed: 0.0870, Recall.Sunflower: 0.0170, Recall.Potatoes: 0.2740, Recall.Peas: 0.1709
2025-01-07 19:54:25,764 - mmseg - INFO - Epoch [5][10/49]	lr: 1.192e-06, eta: 0:02:05, time: 0.656, data_time: 0.220, memory: 15650, decode.loss_ce: 2.6724, decode.acc_seg: 4.4491, aux.loss_ce: 2.6422, aux.acc_seg: 16.5249, loss: 5.3146
2025-01-07 19:54:30,074 - mmseg - INFO - Epoch [5][20/49]	lr: 1.207e-06, eta: 0:02:01, time: 0.431, data_time: 0.005, memory: 15650, decode.loss_ce: 2.1522, decode.acc_seg: 4.5882, aux.loss_ce: 2.1476, aux.acc_seg: 14.2275, loss: 4.2999
2025-01-07 19:54:34,483 - mmseg - INFO - Epoch [5][30/49]	lr: 1.217e-06, eta: 0:01:56, time: 0.441, data_time: 0.005, memory: 15650, decode.loss_ce: 2.5136, decode.acc_seg: 4.9808, aux.loss_ce: 2.5066, aux.acc_seg: 14.6352, loss: 5.0202
2025-01-07 19:54:38,781 - mmseg - INFO - Epoch [5][40/49]	lr: 1.223e-06, eta: 0:01:52, time: 0.430, data_time: 0.005, memory: 15650, decode.loss_ce: 2.7761, decode.acc_seg: 5.4288, aux.loss_ce: 2.7620, aux.acc_seg: 15.8647, loss: 5.5381
2025-01-07 19:54:46,826 - mmseg - INFO - per class results:
2025-01-07 19:54:46,828 - mmseg - INFO - 
+-----------+------+-------+-------+--------+-----------+--------+
|   Class   | IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+-----------+------+-------+-------+--------+-----------+--------+
|   Wheat   | 1.26 |  1.28 |  2.49 |  2.49  |   52.39   |  1.28  |
|   Maize   | 6.86 | 18.05 | 12.85 | 12.85  |    9.97   | 18.05  |
|  Sorghum  | 0.54 |  8.4  |  1.07 |  1.07  |    0.57   |  8.4   |
|   Barley  | 0.26 |  0.26 |  0.51 |  0.51  |   18.91   |  0.26  |
|    Rye    | 0.13 | 19.62 |  0.26 |  0.26  |    0.13   | 19.62  |
|    Oats   | 1.89 |  2.85 |  3.71 |  3.71  |    5.32   |  2.85  |
|   Grapes  | 0.24 | 16.86 |  0.49 |  0.49  |    0.25   | 16.86  |
|  Rapeseed | 6.34 |  9.13 | 11.92 | 11.92  |   17.15   |  9.13  |
| Sunflower | 1.96 |  2.36 |  3.84 |  3.84  |   10.25   |  2.36  |
|  Potatoes | 4.08 | 27.35 |  7.84 |  7.84  |    4.58   | 27.35  |
|    Peas   | 2.3  | 17.47 |  4.5  |  4.5   |    2.58   | 17.47  |
+-----------+------+-------+-------+--------+-----------+--------+
2025-01-07 19:54:46,828 - mmseg - INFO - Summary:
2025-01-07 19:54:46,828 - mmseg - INFO - 
+------+------+-------+-------+---------+------------+---------+
| aAcc | mIoU |  mAcc | mDice | mFscore | mPrecision | mRecall |
+------+------+-------+-------+---------+------------+---------+
| 4.85 | 2.35 | 11.24 |  4.5  |   4.5   |    11.1    |  11.24  |
+------+------+-------+-------+---------+------------+---------+
2025-01-07 19:54:47,429 - mmseg - INFO - The previous best checkpoint /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2/best_mIoU_epoch_4.pth was removed
2025-01-07 19:55:00,295 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_epoch_5.pth.
2025-01-07 19:55:00,296 - mmseg - INFO - Best mIoU is 0.0235 at 5 epoch.
2025-01-07 19:55:00,297 - mmseg - INFO - Exp name: size_5_experiment_3_fold_1_setting_2.py
2025-01-07 19:55:00,297 - mmseg - INFO - Epoch(val) [5][68]	aAcc: 0.0485, mIoU: 0.0235, mAcc: 0.1124, mDice: 0.0450, mFscore: 0.0450, mPrecision: 0.1110, mRecall: 0.1124, IoU.Wheat: 0.0126, IoU.Maize: 0.0686, IoU.Sorghum: 0.0054, IoU.Barley: 0.0026, IoU.Rye: 0.0013, IoU.Oats: 0.0189, IoU.Grapes: 0.0024, IoU.Rapeseed: 0.0634, IoU.Sunflower: 0.0196, IoU.Potatoes: 0.0408, IoU.Peas: 0.0230, Acc.Wheat: 0.0128, Acc.Maize: 0.1805, Acc.Sorghum: 0.0840, Acc.Barley: 0.0026, Acc.Rye: 0.1962, Acc.Oats: 0.0285, Acc.Grapes: 0.1686, Acc.Rapeseed: 0.0913, Acc.Sunflower: 0.0236, Acc.Potatoes: 0.2735, Acc.Peas: 0.1747, Dice.Wheat: 0.0249, Dice.Maize: 0.1285, Dice.Sorghum: 0.0107, Dice.Barley: 0.0051, Dice.Rye: 0.0026, Dice.Oats: 0.0371, Dice.Grapes: 0.0049, Dice.Rapeseed: 0.1192, Dice.Sunflower: 0.0384, Dice.Potatoes: 0.0784, Dice.Peas: 0.0450, Fscore.Wheat: 0.0249, Fscore.Maize: 0.1285, Fscore.Sorghum: 0.0107, Fscore.Barley: 0.0051, Fscore.Rye: 0.0026, Fscore.Oats: 0.0371, Fscore.Grapes: 0.0049, Fscore.Rapeseed: 0.1192, Fscore.Sunflower: 0.0384, Fscore.Potatoes: 0.0784, Fscore.Peas: 0.0450, Precision.Wheat: 0.5239, Precision.Maize: 0.0997, Precision.Sorghum: 0.0057, Precision.Barley: 0.1891, Precision.Rye: 0.0013, Precision.Oats: 0.0532, Precision.Grapes: 0.0025, Precision.Rapeseed: 0.1715, Precision.Sunflower: 0.1025, Precision.Potatoes: 0.0458, Precision.Peas: 0.0258, Recall.Wheat: 0.0128, Recall.Maize: 0.1805, Recall.Sorghum: 0.0840, Recall.Barley: 0.0026, Recall.Rye: 0.1962, Recall.Oats: 0.0285, Recall.Grapes: 0.1686, Recall.Rapeseed: 0.0913, Recall.Sunflower: 0.0236, Recall.Potatoes: 0.2735, Recall.Peas: 0.1747
2025-01-07 19:55:06,917 - mmseg - INFO - Epoch [6][10/49]	lr: 1.223e-06, eta: 0:01:42, time: 0.656, data_time: 0.222, memory: 15650, decode.loss_ce: 2.6319, decode.acc_seg: 5.5371, aux.loss_ce: 2.6081, aux.acc_seg: 15.8657, loss: 5.2400
2025-01-07 19:55:11,241 - mmseg - INFO - Epoch [6][20/49]	lr: 1.218e-06, eta: 0:01:37, time: 0.432, data_time: 0.005, memory: 15650, decode.loss_ce: 2.4841, decode.acc_seg: 5.1492, aux.loss_ce: 2.4858, aux.acc_seg: 17.9689, loss: 4.9699
2025-01-07 19:55:15,571 - mmseg - INFO - Epoch [6][30/49]	lr: 1.208e-06, eta: 0:01:33, time: 0.433, data_time: 0.005, memory: 15650, decode.loss_ce: 2.5474, decode.acc_seg: 5.2608, aux.loss_ce: 2.5292, aux.acc_seg: 16.3763, loss: 5.0767
2025-01-07 19:55:19,858 - mmseg - INFO - Epoch [6][40/49]	lr: 1.194e-06, eta: 0:01:28, time: 0.429, data_time: 0.005, memory: 15650, decode.loss_ce: 2.6483, decode.acc_seg: 5.8863, aux.loss_ce: 2.6336, aux.acc_seg: 16.9686, loss: 5.2819
2025-01-07 19:55:28,007 - mmseg - INFO - per class results:
2025-01-07 19:55:28,009 - mmseg - INFO - 
+-----------+------+-------+-------+--------+-----------+--------+
|   Class   | IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+-----------+------+-------+-------+--------+-----------+--------+
|   Wheat   | 1.41 |  1.43 |  2.78 |  2.78  |   53.33   |  1.43  |
|   Maize   | 7.37 | 18.07 | 13.73 | 13.73  |   11.07   | 18.07  |
|  Sorghum  | 0.62 |  8.64 |  1.24 |  1.24  |    0.67   |  8.64  |
|   Barley  | 0.35 |  0.35 |  0.69 |  0.69  |   20.12   |  0.35  |
|    Rye    | 0.12 | 19.91 |  0.24 |  0.24  |    0.12   | 19.91  |
|    Oats   | 2.18 |  3.26 |  4.27 |  4.27  |    6.18   |  3.26  |
|   Grapes  | 0.33 | 22.88 |  0.65 |  0.65  |    0.33   | 22.88  |
|  Rapeseed | 7.99 | 12.23 | 14.79 | 14.79  |    18.7   | 12.23  |
| Sunflower | 2.16 |  2.57 |  4.23 |  4.23  |   12.06   |  2.57  |
|  Potatoes | 4.65 | 29.43 |  8.89 |  8.89  |    5.24   | 29.43  |
|    Peas   | 2.45 | 18.63 |  4.79 |  4.79  |    2.75   | 18.63  |
+-----------+------+-------+-------+--------+-----------+--------+
2025-01-07 19:55:28,009 - mmseg - INFO - Summary:
2025-01-07 19:55:28,009 - mmseg - INFO - 
+------+------+-------+-------+---------+------------+---------+
| aAcc | mIoU |  mAcc | mDice | mFscore | mPrecision | mRecall |
+------+------+-------+-------+---------+------------+---------+
| 5.44 | 2.69 | 12.49 |  5.12 |   5.12  |   11.87    |  12.49  |
+------+------+-------+-------+---------+------------+---------+
2025-01-07 19:55:28,612 - mmseg - INFO - The previous best checkpoint /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2/best_mIoU_epoch_5.pth was removed
2025-01-07 19:55:41,475 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_epoch_6.pth.
2025-01-07 19:55:41,476 - mmseg - INFO - Best mIoU is 0.0269 at 6 epoch.
2025-01-07 19:55:41,477 - mmseg - INFO - Exp name: size_5_experiment_3_fold_1_setting_2.py
2025-01-07 19:55:41,477 - mmseg - INFO - Epoch(val) [6][68]	aAcc: 0.0544, mIoU: 0.0269, mAcc: 0.1249, mDice: 0.0512, mFscore: 0.0512, mPrecision: 0.1187, mRecall: 0.1249, IoU.Wheat: 0.0141, IoU.Maize: 0.0737, IoU.Sorghum: 0.0062, IoU.Barley: 0.0035, IoU.Rye: 0.0012, IoU.Oats: 0.0218, IoU.Grapes: 0.0033, IoU.Rapeseed: 0.0799, IoU.Sunflower: 0.0216, IoU.Potatoes: 0.0465, IoU.Peas: 0.0245, Acc.Wheat: 0.0143, Acc.Maize: 0.1807, Acc.Sorghum: 0.0864, Acc.Barley: 0.0035, Acc.Rye: 0.1991, Acc.Oats: 0.0326, Acc.Grapes: 0.2288, Acc.Rapeseed: 0.1223, Acc.Sunflower: 0.0257, Acc.Potatoes: 0.2943, Acc.Peas: 0.1863, Dice.Wheat: 0.0278, Dice.Maize: 0.1373, Dice.Sorghum: 0.0124, Dice.Barley: 0.0069, Dice.Rye: 0.0024, Dice.Oats: 0.0427, Dice.Grapes: 0.0065, Dice.Rapeseed: 0.1479, Dice.Sunflower: 0.0423, Dice.Potatoes: 0.0889, Dice.Peas: 0.0479, Fscore.Wheat: 0.0278, Fscore.Maize: 0.1373, Fscore.Sorghum: 0.0124, Fscore.Barley: 0.0069, Fscore.Rye: 0.0024, Fscore.Oats: 0.0427, Fscore.Grapes: 0.0065, Fscore.Rapeseed: 0.1479, Fscore.Sunflower: 0.0423, Fscore.Potatoes: 0.0889, Fscore.Peas: 0.0479, Precision.Wheat: 0.5333, Precision.Maize: 0.1107, Precision.Sorghum: 0.0067, Precision.Barley: 0.2012, Precision.Rye: 0.0012, Precision.Oats: 0.0618, Precision.Grapes: 0.0033, Precision.Rapeseed: 0.1870, Precision.Sunflower: 0.1206, Precision.Potatoes: 0.0524, Precision.Peas: 0.0275, Recall.Wheat: 0.0143, Recall.Maize: 0.1807, Recall.Sorghum: 0.0864, Recall.Barley: 0.0035, Recall.Rye: 0.1991, Recall.Oats: 0.0326, Recall.Grapes: 0.2288, Recall.Rapeseed: 0.1223, Recall.Sunflower: 0.0257, Recall.Potatoes: 0.2943, Recall.Peas: 0.1863
2025-01-07 19:55:48,111 - mmseg - INFO - Epoch [7][10/49]	lr: 1.156e-06, eta: 0:01:19, time: 0.657, data_time: 0.220, memory: 15650, decode.loss_ce: 2.2324, decode.acc_seg: 5.4509, aux.loss_ce: 2.2197, aux.acc_seg: 15.9650, loss: 4.4521
2025-01-07 19:55:52,485 - mmseg - INFO - Epoch [7][20/49]	lr: 1.131e-06, eta: 0:01:15, time: 0.437, data_time: 0.005, memory: 15650, decode.loss_ce: 2.2088, decode.acc_seg: 6.5919, aux.loss_ce: 2.1977, aux.acc_seg: 17.7838, loss: 4.4064
2025-01-07 19:55:56,723 - mmseg - INFO - Epoch [7][30/49]	lr: 1.101e-06, eta: 0:01:11, time: 0.424, data_time: 0.005, memory: 15650, decode.loss_ce: 2.4796, decode.acc_seg: 6.6657, aux.loss_ce: 2.4743, aux.acc_seg: 17.1003, loss: 4.9540
2025-01-07 19:56:01,040 - mmseg - INFO - Epoch [7][40/49]	lr: 1.067e-06, eta: 0:01:06, time: 0.432, data_time: 0.005, memory: 15650, decode.loss_ce: 3.5282, decode.acc_seg: 6.4324, aux.loss_ce: 3.4898, aux.acc_seg: 19.3249, loss: 7.0181
2025-01-07 19:56:08,976 - mmseg - INFO - per class results:
2025-01-07 19:56:08,977 - mmseg - INFO - 
+-----------+------+-------+-------+--------+-----------+--------+
|   Class   | IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+-----------+------+-------+-------+--------+-----------+--------+
|   Wheat   | 1.53 |  1.55 |  3.02 |  3.02  |   54.24   |  1.55  |
|   Maize   | 7.98 | 18.37 | 14.79 | 14.79  |   12.37   | 18.37  |
|  Sorghum  | 0.67 |  9.03 |  1.34 |  1.34  |    0.72   |  9.03  |
|   Barley  | 0.43 |  0.44 |  0.86 |  0.86  |   20.82   |  0.44  |
|    Rye    | 0.11 | 20.57 |  0.22 |  0.22  |    0.11   | 20.57  |
|    Oats   | 2.4  |  3.51 |  4.69 |  4.69  |    7.08   |  3.51  |
|   Grapes  | 0.39 | 24.41 |  0.77 |  0.77  |    0.39   | 24.41  |
|  Rapeseed | 9.13 | 14.43 | 16.74 | 16.74  |   19.93   | 14.43  |
| Sunflower | 2.84 |  3.41 |  5.52 |  5.52  |   14.43   |  3.41  |
|  Potatoes | 5.21 | 31.07 |  9.9  |  9.9   |    5.89   | 31.07  |
|    Peas   | 2.61 | 19.89 |  5.08 |  5.08  |    2.91   | 19.89  |
+-----------+------+-------+-------+--------+-----------+--------+
2025-01-07 19:56:08,977 - mmseg - INFO - Summary:
2025-01-07 19:56:08,978 - mmseg - INFO - 
+------+------+-------+-------+---------+------------+---------+
| aAcc | mIoU |  mAcc | mDice | mFscore | mPrecision | mRecall |
+------+------+-------+-------+---------+------------+---------+
| 5.94 | 3.03 | 13.33 |  5.72 |   5.72  |   12.63    |  13.33  |
+------+------+-------+-------+---------+------------+---------+
2025-01-07 19:56:09,579 - mmseg - INFO - The previous best checkpoint /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2/best_mIoU_epoch_6.pth was removed
2025-01-07 19:56:22,317 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_epoch_7.pth.
2025-01-07 19:56:22,318 - mmseg - INFO - Best mIoU is 0.0303 at 7 epoch.
2025-01-07 19:56:22,318 - mmseg - INFO - Exp name: size_5_experiment_3_fold_1_setting_2.py
2025-01-07 19:56:22,318 - mmseg - INFO - Epoch(val) [7][68]	aAcc: 0.0594, mIoU: 0.0303, mAcc: 0.1333, mDice: 0.0572, mFscore: 0.0572, mPrecision: 0.1263, mRecall: 0.1333, IoU.Wheat: 0.0153, IoU.Maize: 0.0798, IoU.Sorghum: 0.0067, IoU.Barley: 0.0043, IoU.Rye: 0.0011, IoU.Oats: 0.0240, IoU.Grapes: 0.0039, IoU.Rapeseed: 0.0913, IoU.Sunflower: 0.0284, IoU.Potatoes: 0.0521, IoU.Peas: 0.0261, Acc.Wheat: 0.0155, Acc.Maize: 0.1837, Acc.Sorghum: 0.0903, Acc.Barley: 0.0044, Acc.Rye: 0.2057, Acc.Oats: 0.0351, Acc.Grapes: 0.2441, Acc.Rapeseed: 0.1443, Acc.Sunflower: 0.0341, Acc.Potatoes: 0.3107, Acc.Peas: 0.1989, Dice.Wheat: 0.0302, Dice.Maize: 0.1479, Dice.Sorghum: 0.0134, Dice.Barley: 0.0086, Dice.Rye: 0.0022, Dice.Oats: 0.0469, Dice.Grapes: 0.0077, Dice.Rapeseed: 0.1674, Dice.Sunflower: 0.0552, Dice.Potatoes: 0.0990, Dice.Peas: 0.0508, Fscore.Wheat: 0.0302, Fscore.Maize: 0.1479, Fscore.Sorghum: 0.0134, Fscore.Barley: 0.0086, Fscore.Rye: 0.0022, Fscore.Oats: 0.0469, Fscore.Grapes: 0.0077, Fscore.Rapeseed: 0.1674, Fscore.Sunflower: 0.0552, Fscore.Potatoes: 0.0990, Fscore.Peas: 0.0508, Precision.Wheat: 0.5424, Precision.Maize: 0.1237, Precision.Sorghum: 0.0072, Precision.Barley: 0.2082, Precision.Rye: 0.0011, Precision.Oats: 0.0708, Precision.Grapes: 0.0039, Precision.Rapeseed: 0.1993, Precision.Sunflower: 0.1443, Precision.Potatoes: 0.0589, Precision.Peas: 0.0291, Recall.Wheat: 0.0155, Recall.Maize: 0.1837, Recall.Sorghum: 0.0903, Recall.Barley: 0.0044, Recall.Rye: 0.2057, Recall.Oats: 0.0351, Recall.Grapes: 0.2441, Recall.Rapeseed: 0.1443, Recall.Sunflower: 0.0341, Recall.Potatoes: 0.3107, Recall.Peas: 0.1989
2025-01-07 19:56:28,910 - mmseg - INFO - Epoch [8][10/49]	lr: 9.914e-07, eta: 0:00:58, time: 0.651, data_time: 0.217, memory: 15650, decode.loss_ce: 2.1828, decode.acc_seg: 6.1795, aux.loss_ce: 2.1645, aux.acc_seg: 17.1064, loss: 4.3472
2025-01-07 19:56:33,248 - mmseg - INFO - Epoch [8][20/49]	lr: 9.456e-07, eta: 0:00:53, time: 0.434, data_time: 0.005, memory: 15650, decode.loss_ce: 2.8555, decode.acc_seg: 7.0144, aux.loss_ce: 2.8110, aux.acc_seg: 18.9939, loss: 5.6665
2025-01-07 19:56:37,573 - mmseg - INFO - Epoch [8][30/49]	lr: 8.958e-07, eta: 0:00:49, time: 0.433, data_time: 0.005, memory: 15650, decode.loss_ce: 3.1136, decode.acc_seg: 6.4931, aux.loss_ce: 3.0786, aux.acc_seg: 18.6660, loss: 6.1922
2025-01-07 19:56:41,944 - mmseg - INFO - Epoch [8][40/49]	lr: 8.420e-07, eta: 0:00:45, time: 0.437, data_time: 0.005, memory: 15650, decode.loss_ce: 2.3539, decode.acc_seg: 5.8082, aux.loss_ce: 2.3203, aux.acc_seg: 17.2488, loss: 4.6742
2025-01-07 19:56:50,075 - mmseg - INFO - per class results:
2025-01-07 19:56:50,076 - mmseg - INFO - 
+-----------+-------+-------+-------+--------+-----------+--------+
|   Class   |  IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+-----------+-------+-------+-------+--------+-----------+--------+
|   Wheat   |  1.66 |  1.68 |  3.26 |  3.26  |   55.57   |  1.68  |
|   Maize   |  8.34 | 19.13 | 15.39 | 15.39  |   12.87   | 19.13  |
|  Sorghum  |  0.73 |  9.19 |  1.45 |  1.45  |    0.79   |  9.19  |
|   Barley  |  0.53 |  0.54 |  1.06 |  1.06  |   21.88   |  0.54  |
|    Rye    |  0.12 | 20.24 |  0.24 |  0.24  |    0.12   | 20.24  |
|    Oats   |  2.81 |  4.43 |  5.47 |  5.47  |    7.15   |  4.43  |
|   Grapes  |  0.43 | 33.39 |  0.86 |  0.86  |    0.44   | 33.39  |
|  Rapeseed | 11.14 | 19.23 | 20.05 | 20.05  |   20.93   | 19.23  |
| Sunflower |  3.16 |  3.76 |  6.13 |  6.13  |    16.6   |  3.76  |
|  Potatoes |  5.67 | 31.88 | 10.73 | 10.73  |    6.45   | 31.88  |
|    Peas   |  2.72 | 19.34 |  5.29 |  5.29  |    3.06   | 19.34  |
+-----------+-------+-------+-------+--------+-----------+--------+
2025-01-07 19:56:50,077 - mmseg - INFO - Summary:
2025-01-07 19:56:50,077 - mmseg - INFO - 
+------+------+------+-------+---------+------------+---------+
| aAcc | mIoU | mAcc | mDice | mFscore | mPrecision | mRecall |
+------+------+------+-------+---------+------------+---------+
| 6.74 | 3.39 | 14.8 |  6.36 |   6.36  |   13.26    |   14.8  |
+------+------+------+-------+---------+------------+---------+
2025-01-07 19:56:50,678 - mmseg - INFO - The previous best checkpoint /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2/best_mIoU_epoch_7.pth was removed
2025-01-07 19:57:03,607 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_epoch_8.pth.
2025-01-07 19:57:03,607 - mmseg - INFO - Best mIoU is 0.0339 at 8 epoch.
2025-01-07 19:57:03,608 - mmseg - INFO - Exp name: size_5_experiment_3_fold_1_setting_2.py
2025-01-07 19:57:03,608 - mmseg - INFO - Epoch(val) [8][68]	aAcc: 0.0674, mIoU: 0.0339, mAcc: 0.1480, mDice: 0.0636, mFscore: 0.0636, mPrecision: 0.1326, mRecall: 0.1480, IoU.Wheat: 0.0166, IoU.Maize: 0.0834, IoU.Sorghum: 0.0073, IoU.Barley: 0.0053, IoU.Rye: 0.0012, IoU.Oats: 0.0281, IoU.Grapes: 0.0043, IoU.Rapeseed: 0.1114, IoU.Sunflower: 0.0316, IoU.Potatoes: 0.0567, IoU.Peas: 0.0272, Acc.Wheat: 0.0168, Acc.Maize: 0.1913, Acc.Sorghum: 0.0919, Acc.Barley: 0.0054, Acc.Rye: 0.2024, Acc.Oats: 0.0443, Acc.Grapes: 0.3339, Acc.Rapeseed: 0.1923, Acc.Sunflower: 0.0376, Acc.Potatoes: 0.3188, Acc.Peas: 0.1934, Dice.Wheat: 0.0326, Dice.Maize: 0.1539, Dice.Sorghum: 0.0145, Dice.Barley: 0.0106, Dice.Rye: 0.0024, Dice.Oats: 0.0547, Dice.Grapes: 0.0086, Dice.Rapeseed: 0.2005, Dice.Sunflower: 0.0613, Dice.Potatoes: 0.1073, Dice.Peas: 0.0529, Fscore.Wheat: 0.0326, Fscore.Maize: 0.1539, Fscore.Sorghum: 0.0145, Fscore.Barley: 0.0106, Fscore.Rye: 0.0024, Fscore.Oats: 0.0547, Fscore.Grapes: 0.0086, Fscore.Rapeseed: 0.2005, Fscore.Sunflower: 0.0613, Fscore.Potatoes: 0.1073, Fscore.Peas: 0.0529, Precision.Wheat: 0.5557, Precision.Maize: 0.1287, Precision.Sorghum: 0.0079, Precision.Barley: 0.2188, Precision.Rye: 0.0012, Precision.Oats: 0.0715, Precision.Grapes: 0.0044, Precision.Rapeseed: 0.2093, Precision.Sunflower: 0.1660, Precision.Potatoes: 0.0645, Precision.Peas: 0.0306, Recall.Wheat: 0.0168, Recall.Maize: 0.1913, Recall.Sorghum: 0.0919, Recall.Barley: 0.0054, Recall.Rye: 0.2024, Recall.Oats: 0.0443, Recall.Grapes: 0.3339, Recall.Rapeseed: 0.1923, Recall.Sunflower: 0.0376, Recall.Potatoes: 0.3188, Recall.Peas: 0.1934
2025-01-07 19:57:10,255 - mmseg - INFO - Epoch [9][10/49]	lr: 7.283e-07, eta: 0:00:37, time: 0.658, data_time: 0.221, memory: 15650, decode.loss_ce: 2.5071, decode.acc_seg: 7.7941, aux.loss_ce: 2.4918, aux.acc_seg: 17.5859, loss: 4.9988
2025-01-07 19:57:14,660 - mmseg - INFO - Epoch [9][20/49]	lr: 6.626e-07, eta: 0:00:32, time: 0.440, data_time: 0.005, memory: 15650, decode.loss_ce: 2.7879, decode.acc_seg: 6.2446, aux.loss_ce: 2.7462, aux.acc_seg: 18.1469, loss: 5.5341
2025-01-07 19:57:18,962 - mmseg - INFO - Epoch [9][30/49]	lr: 5.928e-07, eta: 0:00:28, time: 0.430, data_time: 0.005, memory: 15650, decode.loss_ce: 2.7521, decode.acc_seg: 7.5452, aux.loss_ce: 2.7221, aux.acc_seg: 20.6713, loss: 5.4742
2025-01-07 19:57:23,332 - mmseg - INFO - Epoch [9][40/49]	lr: 5.190e-07, eta: 0:00:24, time: 0.437, data_time: 0.005, memory: 15650, decode.loss_ce: 1.9283, decode.acc_seg: 6.7817, aux.loss_ce: 1.9213, aux.acc_seg: 18.2670, loss: 3.8496
2025-01-07 19:57:31,321 - mmseg - INFO - per class results:
2025-01-07 19:57:31,323 - mmseg - INFO - 
+-----------+-------+-------+-------+--------+-----------+--------+
|   Class   |  IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+-----------+-------+-------+-------+--------+-----------+--------+
|   Wheat   |  1.7  |  1.72 |  3.34 |  3.34  |   56.33   |  1.72  |
|   Maize   |  8.61 | 19.02 | 15.85 | 15.85  |   13.59   | 19.02  |
|  Sorghum  |  0.73 |  8.95 |  1.45 |  1.45  |    0.79   |  8.95  |
|   Barley  |  0.6  |  0.61 |  1.19 |  1.19  |   22.56   |  0.61  |
|    Rye    |  0.12 | 20.75 |  0.23 |  0.23  |    0.12   | 20.75  |
|    Oats   |  2.94 |  4.64 |  5.72 |  5.72  |    7.46   |  4.64  |
|   Grapes  |  0.49 | 36.56 |  0.97 |  0.97  |    0.49   | 36.56  |
|  Rapeseed | 11.71 | 20.33 | 20.97 | 20.97  |   21.65   | 20.33  |
| Sunflower |  3.56 |  4.24 |  6.87 |  6.87  |    18.0   |  4.24  |
|  Potatoes |  6.12 |  33.8 | 11.53 | 11.53  |    6.95   |  33.8  |
|    Peas   |  2.78 | 19.47 |  5.41 |  5.41  |    3.14   | 19.47  |
+-----------+-------+-------+-------+--------+-----------+--------+
2025-01-07 19:57:31,323 - mmseg - INFO - Summary:
2025-01-07 19:57:31,323 - mmseg - INFO - 
+------+------+-------+-------+---------+------------+---------+
| aAcc | mIoU |  mAcc | mDice | mFscore | mPrecision | mRecall |
+------+------+-------+-------+---------+------------+---------+
| 7.0  | 3.58 | 15.46 |  6.69 |   6.69  |   13.74    |  15.46  |
+------+------+-------+-------+---------+------------+---------+
2025-01-07 19:57:31,921 - mmseg - INFO - The previous best checkpoint /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2/best_mIoU_epoch_8.pth was removed
2025-01-07 19:57:44,748 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_epoch_9.pth.
2025-01-07 19:57:44,749 - mmseg - INFO - Best mIoU is 0.0358 at 9 epoch.
2025-01-07 19:57:44,749 - mmseg - INFO - Exp name: size_5_experiment_3_fold_1_setting_2.py
2025-01-07 19:57:44,749 - mmseg - INFO - Epoch(val) [9][68]	aAcc: 0.0700, mIoU: 0.0358, mAcc: 0.1546, mDice: 0.0669, mFscore: 0.0669, mPrecision: 0.1374, mRecall: 0.1546, IoU.Wheat: 0.0170, IoU.Maize: 0.0861, IoU.Sorghum: 0.0073, IoU.Barley: 0.0060, IoU.Rye: 0.0012, IoU.Oats: 0.0294, IoU.Grapes: 0.0049, IoU.Rapeseed: 0.1171, IoU.Sunflower: 0.0356, IoU.Potatoes: 0.0612, IoU.Peas: 0.0278, Acc.Wheat: 0.0172, Acc.Maize: 0.1902, Acc.Sorghum: 0.0895, Acc.Barley: 0.0061, Acc.Rye: 0.2075, Acc.Oats: 0.0464, Acc.Grapes: 0.3656, Acc.Rapeseed: 0.2033, Acc.Sunflower: 0.0424, Acc.Potatoes: 0.3380, Acc.Peas: 0.1947, Dice.Wheat: 0.0334, Dice.Maize: 0.1585, Dice.Sorghum: 0.0145, Dice.Barley: 0.0119, Dice.Rye: 0.0023, Dice.Oats: 0.0572, Dice.Grapes: 0.0097, Dice.Rapeseed: 0.2097, Dice.Sunflower: 0.0687, Dice.Potatoes: 0.1153, Dice.Peas: 0.0541, Fscore.Wheat: 0.0334, Fscore.Maize: 0.1585, Fscore.Sorghum: 0.0145, Fscore.Barley: 0.0119, Fscore.Rye: 0.0023, Fscore.Oats: 0.0572, Fscore.Grapes: 0.0097, Fscore.Rapeseed: 0.2097, Fscore.Sunflower: 0.0687, Fscore.Potatoes: 0.1153, Fscore.Peas: 0.0541, Precision.Wheat: 0.5633, Precision.Maize: 0.1359, Precision.Sorghum: 0.0079, Precision.Barley: 0.2256, Precision.Rye: 0.0012, Precision.Oats: 0.0746, Precision.Grapes: 0.0049, Precision.Rapeseed: 0.2165, Precision.Sunflower: 0.1800, Precision.Potatoes: 0.0695, Precision.Peas: 0.0314, Recall.Wheat: 0.0172, Recall.Maize: 0.1902, Recall.Sorghum: 0.0895, Recall.Barley: 0.0061, Recall.Rye: 0.2075, Recall.Oats: 0.0464, Recall.Grapes: 0.3656, Recall.Rapeseed: 0.2033, Recall.Sunflower: 0.0424, Recall.Potatoes: 0.3380, Recall.Peas: 0.1947
2025-01-07 19:57:51,301 - mmseg - INFO - Epoch [10][10/49]	lr: 3.673e-07, eta: 0:00:16, time: 0.649, data_time: 0.216, memory: 15650, decode.loss_ce: 2.2629, decode.acc_seg: 7.7591, aux.loss_ce: 2.2547, aux.acc_seg: 18.5745, loss: 4.5176
2025-01-07 19:57:55,702 - mmseg - INFO - Epoch [10][20/49]	lr: 2.816e-07, eta: 0:00:12, time: 0.440, data_time: 0.005, memory: 15650, decode.loss_ce: 2.8912, decode.acc_seg: 7.7976, aux.loss_ce: 2.8495, aux.acc_seg: 19.6705, loss: 5.7407
2025-01-07 19:58:00,077 - mmseg - INFO - Epoch [10][30/49]	lr: 1.918e-07, eta: 0:00:07, time: 0.438, data_time: 0.005, memory: 15650, decode.loss_ce: 2.1879, decode.acc_seg: 6.3911, aux.loss_ce: 2.1789, aux.acc_seg: 20.0713, loss: 4.3668
2025-01-07 19:58:04,478 - mmseg - INFO - Epoch [10][40/49]	lr: 9.796e-08, eta: 0:00:03, time: 0.440, data_time: 0.005, memory: 15650, decode.loss_ce: 2.4885, decode.acc_seg: 7.5749, aux.loss_ce: 2.4732, aux.acc_seg: 19.0805, loss: 4.9616
2025-01-07 19:58:08,387 - mmseg - INFO - Saving checkpoint at 10 epochs
2025-01-07 19:58:24,284 - mmseg - INFO - per class results:
2025-01-07 19:58:24,286 - mmseg - INFO - 
+-----------+-------+-------+-------+--------+-----------+--------+
|   Class   |  IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+-----------+-------+-------+-------+--------+-----------+--------+
|   Wheat   |  1.7  |  1.72 |  3.34 |  3.34  |   56.57   |  1.72  |
|   Maize   |  8.81 | 19.57 |  16.2 |  16.2  |   13.82   | 19.57  |
|  Sorghum  |  0.75 |  8.5  |  1.48 |  1.48  |    0.81   |  8.5   |
|   Barley  |  0.59 |  0.6  |  1.17 |  1.17  |   22.84   |  0.6   |
|    Rye    |  0.12 | 20.42 |  0.23 |  0.23  |    0.12   | 20.42  |
|    Oats   |  3.07 |  4.91 |  5.96 |  5.96  |    7.58   |  4.91  |
|   Grapes  |  0.5  | 37.32 |  1.0  |  1.0   |    0.51   | 37.32  |
|  Rapeseed | 12.13 | 21.48 | 21.64 | 21.64  |    21.8   | 21.48  |
| Sunflower |  3.38 |  3.96 |  6.54 |  6.54  |   18.78   |  3.96  |
|  Potatoes |  6.29 | 35.13 | 11.84 | 11.84  |    7.12   | 35.13  |
|    Peas   |  2.82 | 19.41 |  5.49 |  5.49  |    3.2    | 19.41  |
+-----------+-------+-------+-------+--------+-----------+--------+
2025-01-07 19:58:24,286 - mmseg - INFO - Summary:
2025-01-07 19:58:24,286 - mmseg - INFO - 
+------+------+-------+-------+---------+------------+---------+
| aAcc | mIoU |  mAcc | mDice | mFscore | mPrecision | mRecall |
+------+------+-------+-------+---------+------------+---------+
| 7.21 | 3.65 | 15.73 |  6.81 |   6.81  |   13.92    |  15.73  |
+------+------+-------+-------+---------+------------+---------+
2025-01-07 19:58:24,895 - mmseg - INFO - The previous best checkpoint /home/featurize/Results/Size_5_Experiment_3_Fold_1_Setting_2/best_mIoU_epoch_9.pth was removed
2025-01-07 19:58:37,934 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_epoch_10.pth.
2025-01-07 19:58:37,935 - mmseg - INFO - Best mIoU is 0.0365 at 10 epoch.
2025-01-07 19:58:37,936 - mmseg - INFO - Exp name: size_5_experiment_3_fold_1_setting_2.py
2025-01-07 19:58:37,936 - mmseg - INFO - Epoch(val) [10][68]	aAcc: 0.0721, mIoU: 0.0365, mAcc: 0.1573, mDice: 0.0681, mFscore: 0.0681, mPrecision: 0.1392, mRecall: 0.1573, IoU.Wheat: 0.0170, IoU.Maize: 0.0881, IoU.Sorghum: 0.0075, IoU.Barley: 0.0059, IoU.Rye: 0.0012, IoU.Oats: 0.0307, IoU.Grapes: 0.0050, IoU.Rapeseed: 0.1213, IoU.Sunflower: 0.0338, IoU.Potatoes: 0.0629, IoU.Peas: 0.0282, Acc.Wheat: 0.0172, Acc.Maize: 0.1957, Acc.Sorghum: 0.0850, Acc.Barley: 0.0060, Acc.Rye: 0.2042, Acc.Oats: 0.0491, Acc.Grapes: 0.3732, Acc.Rapeseed: 0.2148, Acc.Sunflower: 0.0396, Acc.Potatoes: 0.3513, Acc.Peas: 0.1941, Dice.Wheat: 0.0334, Dice.Maize: 0.1620, Dice.Sorghum: 0.0148, Dice.Barley: 0.0117, Dice.Rye: 0.0023, Dice.Oats: 0.0596, Dice.Grapes: 0.0100, Dice.Rapeseed: 0.2164, Dice.Sunflower: 0.0654, Dice.Potatoes: 0.1184, Dice.Peas: 0.0549, Fscore.Wheat: 0.0334, Fscore.Maize: 0.1620, Fscore.Sorghum: 0.0148, Fscore.Barley: 0.0117, Fscore.Rye: 0.0023, Fscore.Oats: 0.0596, Fscore.Grapes: 0.0100, Fscore.Rapeseed: 0.2164, Fscore.Sunflower: 0.0654, Fscore.Potatoes: 0.1184, Fscore.Peas: 0.0549, Precision.Wheat: 0.5657, Precision.Maize: 0.1382, Precision.Sorghum: 0.0081, Precision.Barley: 0.2284, Precision.Rye: 0.0012, Precision.Oats: 0.0758, Precision.Grapes: 0.0051, Precision.Rapeseed: 0.2180, Precision.Sunflower: 0.1878, Precision.Potatoes: 0.0712, Precision.Peas: 0.0320, Recall.Wheat: 0.0172, Recall.Maize: 0.1957, Recall.Sorghum: 0.0850, Recall.Barley: 0.0060, Recall.Rye: 0.2042, Recall.Oats: 0.0491, Recall.Grapes: 0.3732, Recall.Rapeseed: 0.2148, Recall.Sunflower: 0.0396, Recall.Potatoes: 0.3513, Recall.Peas: 0.1941
